<?php

declare(strict_types=1);

use Lits\Config\DatabaseConfig;
use Lits\Config\FrameworkConfig;
use Lits\Config\SessionConfig;
use Lits\Config\ShortenerConfig;
use Lits\Config\TemplateConfig;
use Lits\Config\WatermarkConfig;
use Lits\Framework;

return function (Framework $framework): void {
    $settings = $framework->settings();

    assert($settings['framework'] instanceof FrameworkConfig);

    // Whether to enable debug information.
    // $settings['framework']->debug = false;

    // Path to log file to be generated by the application.
    // $settings['framework']->log = '';

    assert($settings['session'] instanceof SessionConfig);

    // Base64 encoded key with at least 32-bits of entropy. Required.
    // $settings['session']->key = '';

    // Seconds before a session will expire.
    // $settings['session']->expires = 3600;

    assert($settings['template'] instanceof TemplateConfig);

    // Path to cache directory, which must be writable.
    $settings['template']->cache = __DIR__ . DIRECTORY_SEPARATOR . 'cache';

    // Paths to search for template files.
    // $settings['template']->paths[] = '';

    // Name of the site.
    $settings['template']->site = null;

    // HTML analytics tracking code added to head element for the site.
    // $settings['template']->analytics = '';

    // HTML contact information for the site.
    // $settings['template']->contact = '';

    // Menu for the site.
    // $settings['template']->menu = [];

    assert($settings['database'] instanceof DatabaseConfig);

    // Type of database connection, either mysql or pgsql.
    $settings['database']->type = 'mysql';

    // Hostname of database connection.
    $settings['database']->host = 'localhost';

    // Port of database connection, may be left to default for database type.
    // $settings['database']->port = 3306;

    // Username for database connection.
    $settings['database']->username = 'shortener';

    // Password for database connection.
    $settings['database']->password = 'password';

    // Database name for database connection.
    $settings['database']->name = 'shortener';

    // Prefix for tables within the database, may be left to default for none.
    // $settings['database']->prefix = 'shortener_';

    // Directory which contains migration files for the database.
    $settings['database']->migration = __DIR__ . DIRECTORY_SEPARATOR .
        'src' . DIRECTORY_SEPARATOR . 'Migration';

    assert($settings['shortener'] instanceof ShortenerConfig);

    // List of regular expressions which match URLs that are allowed to be
    // shortened. At least one must be specified if shortening is desired.
    $settings['shortener']->link_allow = [
        '#^https://example.org/#',
    ];

    // List of regular expressions which match URLs that are denied to be
    // shortened. Optional.
    // $settings['shortener']->link_deny = [
    //     '#^https://deny.org/#',
    // ];

    // URL to redirect to if no shortened link is matched. If not specified,
    // a 404 Not Found error will be produced.
    // $settings['shortener']->redirect = 'http://example.org/';

    // Document root file path for HTTP server. DOCUMENT_ROOT provided by the
    // server is used by default if available, otherwise the current working
    // directory will be used with unexpected results.
    // $settings['shortener']->root = '/path/to/document/root/';

    assert($settings['watermark'] instanceof WatermarkConfig);

    // Driver to use for Intervention Image. See below for details:
    // https://image.intervention.io/v3/basics/image-manager
    // $settings['watermark']->driver =
    //     \Intervention\Image\Drivers\Gd\Driver::class;

    // Type of watermark to use. Available options are:
    //  DefaultWatermark, InsideWatermark, OutsideWatermark
    // $settings['watermark']->type = \Lits\Watermark\DefaultWatermark::class;

    // Font to use for shortened link on watermark. Default is GD font 5.
    // $settings['watermark']->font = __DIR__ . DIRECTORY_SEPARATOR .
    //     'font' . DIRECTORY_SEPARATOR . 'SourceCodePro-Bold.ttf';

    // File path to image to use as a logo on watermark.
    // $settings['watermark']->logo = '/path/to/logo.png';

    // Default width of watermark, will be adjusted for logos and image.
    // $settings['watermark']->width = 250;

    // Default height of watermark, will be adjusted for logos and image.
    // $settings['watermark']->height = 35;

    // Whether the logo should be placed near the left of the image.
    // $settings['watermark']->left = true;

    // Whether the watermark should be placed near the top of the image.
    // $settings['watermark']->top = true;
};
